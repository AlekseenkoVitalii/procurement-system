/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
let currentUser = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', async function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–∞–∑–æ–≤...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∏ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        const userInfo = await api.getUserInfo();
        currentUser = userInfo.data;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        updateUserInterface();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        await showDashboard();
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        document.getElementById('loading-screen').style.display = 'none';
        document.getElementById('main-app').style.display = 'block';
        
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        showLoginError();
    }
});

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function updateUserInterface() {
    if (!currentUser) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userNameElement = document.getElementById('user-name');
    if (userNameElement) {
        userNameElement.textContent = currentUser.name;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω –º–µ–Ω—é –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    if (['ADMIN', 'PROCUREMENT'].includes(currentUser.role)) {
        const adminMenu = document.getElementById('admin-menu');
        if (adminMenu) {
            adminMenu.style.display = 'block';
        }
    }
}

/**
 * –ü–æ–∫–∞–∑ –¥–∞—à–±–æ—Ä–¥–∞
 */
async function showDashboard() {
    try {
        setActiveMenuItem('dashboard');
        
        const ordersResponse = await api.getUserOrders();
        const orders = ordersResponse.data || [];
        
        const html = `
            <div class="fade-in">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2><i class="fas fa-tachometer-alt me-2"></i>–î–∞—à–±–æ—Ä–¥</h2>
                    <span class="text-muted">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${currentUser.name}!</span>
                </div>
                
                <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="stats-card">
                            <div class="stats-value">${orders.length}</div>
                            <div class="stats-label">–ú–æ–∏ –∑–∞–∫–∞–∑—ã</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
                            <div class="stats-value">${orders.filter(o => o.status === '–£–¢–í–ï–†–ñ–î–ï–ù').length}</div>
                            <div class="stats-label">–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card" style="background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);">
                            <div class="stats-value">${orders.filter(o => o.status === '–°–û–ó–î–ê–ù').length}</div>
                            <div class="stats-label">–í –æ–∂–∏–¥–∞–Ω–∏–∏</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card" style="background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%);">
                            <div class="stats-value">${orders.reduce((sum, o) => sum + (o.totalAmount || 0), 0).toLocaleString()}‚ÇΩ</div>
                            <div class="stats-label">–û–±—â–∞—è —Å—É–º–º–∞</div>
                        </div>
                    </div>
                </div>
                
                <!-- –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã -->
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-clock me-2"></i>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã</h5>
                        <button class="btn btn-primary btn-sm" onclick="showCreateOrder()">
                            <i class="fas fa-plus me-1"></i>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑
                        </button>
                    </div>
                    <div class="card-body">
                        ${orders.length > 0 ? renderOrdersList(orders.slice(0, 5)) : '<p class="text-muted text-center">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>'}
                    </div>
                </div>
            </div>
        `;
        
        document.getElementById('content-area').innerHTML = html;
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞:', error);
        api.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞');
    }
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
 */
function renderOrdersList(orders) {
    return orders.map(order => `
        <div class="order-card card mb-2 status-${order.status.toLowerCase()}">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="card-title mb-1">${order.id}</h6>
                        <p class="card-text text-muted mb-2">${order.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}</p>
                        <small class="text-muted">
                            <i class="fas fa-calendar me-1"></i>
                            ${formatDate(order.createDate)}
                        </small>
                    </div>
                    <div class="text-end">
                        <span class="badge ${getStatusBadgeClass(order.status)}">${order.status}</span>
                        <div class="mt-1">
                            <strong>${order.totalAmount?.toLocaleString() || 0}‚ÇΩ</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ CSS –∫–ª–∞—Å—Å–∞ –¥–ª—è –±–µ–π–¥–∂–∞ —Å—Ç–∞—Ç—É—Å–∞
 */
function getStatusBadgeClass(status) {
    const classes = {
        '–°–û–ó–î–ê–ù': 'bg-info',
        '–£–¢–í–ï–†–ñ–î–ï–ù': 'bg-success',
        '–û–¢–ú–ï–ù–ï–ù': 'bg-danger',
        '–í_–û–ë–†–ê–ë–û–¢–ö–ï': 'bg-warning'
    };
    return classes[status] || 'bg-secondary';
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
 */
function formatDate(dateStr) {
    const date = new Date(dateStr);
    return date.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    });
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
 */
function setActiveMenuItem(page) {
    document.querySelectorAll('.list-group-item').forEach(item => {
        item.classList.remove('active');
    });
    
    const menuItems = {
        'dashboard': 0,
        'create-order': 1,
        'my-orders': 2,
        'all-orders': 3,
        'management': 4
    };
    
    const index = menuItems[page];
    if (index !== undefined) {
        const items = document.querySelectorAll('.list-group-item');
        if (items[index]) {
            items[index].classList.add('active');
        }
    }
}

/**
 * –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π (–±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ)
 */
async function showCreateOrder() {
    setActiveMenuItem('create-order');
    document.getElementById('content-area').innerHTML = `
        <div class="text-center">
            <h3>üöß –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>
            <p>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            <button class="btn btn-primary" onclick="showDashboard()">–ù–∞–∑–∞–¥ –∫ –¥–∞—à–±–æ—Ä–¥—É</button>
        </div>
    `;
}

async function showMyOrders() {
    setActiveMenuItem('my-orders');
    document.getElementById('content-area').innerHTML = `
        <div class="text-center">
            <h3>ÔøΩÔøΩ –ú–æ–∏ –∑–∞–∫–∞–∑—ã</h3>
            <p>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            <button class="btn btn-primary" onclick="showDashboard()">–ù–∞–∑–∞–¥ –∫ –¥–∞—à–±–æ—Ä–¥—É</button>
        </div>
    `;
}

async function showAllOrders() {
    setActiveMenuItem('all-orders');
    document.getElementById('content-area').innerHTML = `
        <div class="text-center">
            <h3>üìä –í—Å–µ –∑–∞–∫–∞–∑—ã</h3>
            <p>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</p>
            <button class="btn btn-primary" onclick="showDashboard()">–ù–∞–∑–∞–¥ –∫ –¥–∞—à–±–æ—Ä–¥—É</button>
        </div>
    `;
}

function showProfile() {
    alert('–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function logout() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
        window.location.reload();
    }
}

function showLoginError() {
    document.getElementById('loading-screen').innerHTML = `
        <div class="text-center text-white">
            <i class="fas fa-exclamation-triangle fa-3x mb-3"></i>
            <h4>–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞</h4>
            <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É</p>
            <button class="btn btn-light" onclick="window.location.reload()">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
        </div>
    `;
}
